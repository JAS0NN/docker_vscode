FROM ubuntu:22.04

ENV DEBIAN_FRONTEND=noninteractive

# Update and install necessary packages
RUN apt-get update && apt-get install -y \
    wget \
    curl \
    git \
    gnupg2 \
    software-properties-common \
    sudo \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create a user for running VSCode Server
RUN useradd -m -s /bin/bash vscodeuser && \
    echo "vscodeuser ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Set working directory
WORKDIR /home/vscodeuser

# Install code-server directly from GitHub releases (as root)
# First, test network connectivity
RUN apt-get update && apt-get install -y ca-certificates && \
    echo "Testing network connectivity..." && \
    curl -v https://github.com || echo "GitHub connectivity issue detected"

# Download and install code-server with better error handling
RUN mkdir -p /home/vscodeuser/.local/bin && \
    echo "Downloading code-server directly from GitHub..." && \
    VERSION="4.22.1" && \
    echo "Trying wget with verbose output..." && \
    (wget -v --no-check-certificate https://github.com/coder/code-server/releases/download/v${VERSION}/code-server-${VERSION}-linux-amd64.tar.gz -O /tmp/code-server.tar.gz || \
    (echo "wget failed, trying curl..." && \
    curl -v -L -o /tmp/code-server.tar.gz https://github.com/coder/code-server/releases/download/v${VERSION}/code-server-${VERSION}-linux-amd64.tar.gz)) && \
    echo "Extracting code-server..." && \
    mkdir -p /home/vscodeuser/.local/lib/code-server && \
    tar -xzf /tmp/code-server.tar.gz --strip-components=1 -C /home/vscodeuser/.local/lib/code-server && \
    echo "Creating symlink to code-server binary..." && \
    ln -sf /home/vscodeuser/.local/lib/code-server/bin/code-server /home/vscodeuser/.local/bin/code-server && \
    echo "Setting permissions..." && \
    chown -R vscodeuser:vscodeuser /home/vscodeuser/.local && \
    echo "Setting up PATH..." && \
    echo 'export PATH=$PATH:/home/vscodeuser/.local/bin' >> /home/vscodeuser/.bashrc

# Copy the VSIX extension file
COPY RooVeterinaryInc.roo-cline-3.11.17.vsix /tmp/

# Install the extension
RUN echo "Installing VS Code extension..." && \
    apt-get update && apt-get install -y unzip && \
    mkdir -p /home/vscodeuser/.local/share/code-server/extensions && \
    # Try the standard installation method first
    sudo -u vscodeuser /home/vscodeuser/.local/bin/code-server --install-extension /tmp/RooVeterinaryInc.roo-cline-3.11.17.vsix || echo "Standard installation method failed, trying manual extraction" && \
    # Manual extraction as fallback
    EXTENSION_ID="RooVeterinaryInc.roo-cline" && \
    EXTENSION_DIR="/home/vscodeuser/.local/share/code-server/extensions/${EXTENSION_ID}-3.11.17" && \
    mkdir -p "${EXTENSION_DIR}" && \
    unzip -q /tmp/RooVeterinaryInc.roo-cline-3.11.17.vsix -d "${EXTENSION_DIR}" && \
    # Ensure extension.json exists for code-server to recognize the extension
    if [ ! -f "${EXTENSION_DIR}/extension.json" ]; then \
        echo "{\"identifier\":{\"id\":\"${EXTENSION_ID}\"},\"version\":\"3.11.17\",\"location\":{\"$mid\":1,\"path\":\"${EXTENSION_DIR}\",\"scheme\":\"file\"}}" > "${EXTENSION_DIR}/extension.json"; \
    fi && \
    # Fix permissions
    chown -R vscodeuser:vscodeuser /home/vscodeuser/.local/share/code-server && \
    # Verify extension installation
    echo "Verifying extension installation..." && \
    ls -la /home/vscodeuser/.local/share/code-server/extensions | grep -i roo && \
    echo "Extension installed successfully"

# Now switch to vscodeuser after installation
USER vscodeuser

# Create a script to set default password and start code-server
USER root
RUN mkdir -p /home/vscodeuser/.config/code-server && \
    echo "bind-addr: 0.0.0.0:8080" > /home/vscodeuser/.config/code-server/config.yaml && \
    echo "auth: password" >> /home/vscodeuser/.config/code-server/config.yaml && \
    echo "password: password" >> /home/vscodeuser/.config/code-server/config.yaml && \
    echo "cert: false" >> /home/vscodeuser/.config/code-server/config.yaml && \
    chown -R vscodeuser:vscodeuser /home/vscodeuser/.config && \
    echo '#!/bin/bash' > /entrypoint.sh && \
    echo 'echo "Config file already created with default password."' >> /entrypoint.sh && \
    echo 'ls -l /home/vscodeuser/.config/code-server/config.yaml' >> /entrypoint.sh && \
    echo 'echo "Verifying Roo extension installation:"' >> /entrypoint.sh && \
    echo 'ls -la /home/vscodeuser/.local/share/code-server/extensions | grep -i roo' >> /entrypoint.sh && \
    echo 'echo "Listing all installed extensions:"' >> /entrypoint.sh && \
    echo 'sudo -u vscodeuser /home/vscodeuser/.local/bin/code-server --list-extensions || echo "Could not list extensions"' >> /entrypoint.sh && \
    echo 'echo "Starting code-server..."' >> /entrypoint.sh && \
    echo 'exec sudo -iu vscodeuser /home/vscodeuser/.local/bin/code-server' >> /entrypoint.sh && \
    chmod +x /entrypoint.sh

# Expose VSCode Server port
EXPOSE 8080

# Set entrypoint
ENTRYPOINT ["/entrypoint.sh"]